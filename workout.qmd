---
title: "Workout Tracker"
format: dashboard
theme: [sandstone, theme/custom.scss]
fig-width: 10
fig-asp: 0.4
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: load-packages
#| message: false

library(tidyverse)
library(readxl)
library(scales)
library(gt)
```

```{r}
#| label: load-data
#| message: false
workout_sheet <- read_excel("data/2025-02-23_Workout_SD.xlsx", sheet = 1)
```

# HOME

```{r}
#| label: all-values
#| results: hide

num_workouts <- length(unique(workout_sheet$date))
total_volume <- sum(workout_sheet$weight_lb * workout_sheet$rep)
top_exercise <- workout_sheet |>
      group_by(exercise) |>
      summarise(total_volume = weight_lb * rep) |>
      ungroup() |>
      slice_max(order_by = total_volume) |>
      pull(exercise)
longest_streak <- workout_sheet |>
  mutate(date = as.Date(date), 
         week = floor_date(date, "week")) |>
  distinct(week) |> # Keep unique weeks
  arrange(week) |>
  mutate(gap = c(0, diff(week) == 7),  # Identify gaps of exactly 1 week
         streak_id = cumsum(gap == 0)) |>
  count(streak_id) |>
  summarise(max_streak = max(n)) |>
  pull(max_streak) |>
  paste0(" weeks")

# Muscle type
push = c("Chest", "Triceps", "Shoulders")
pull = c("Back", "Biceps", "Trapezius")
legs = c("Quadriceps", "Hamstrings", "Running")

muscle_type_stat <- function(type) {
  workout_sheet |>
  group_by(muscle_group) |>
  summarise(total_volume = sum(rep*weight_lb), .groups = "drop") |>
  mutate(percent = total_volume / sum(total_volume)) |>
  select(-total_volume) |>
  filter(muscle_group %in% type) |>
  gt() |>
  fmt_percent(
    columns = percent,
    decimals = 1
  ) |>
  cols_label(
    muscle_group = "",
    percent = "Proportion",
    .fn = md
  )
}
```

## Row {height="20%"}

### Column {width="20%"}

```{r}
#| content: valuebox
#| title: "TOTAL WORKOUTS"

list(
  color = "primary",
  value = num_workouts
)
```

### Column {width="20%"}

```{r}
#| content: valuebox
#| title: "TOTAL VOLUME (lbs)"

list(
  color = "warning",
  value = prettyNum(total_volume, big.mark = ", ")
)
```

### Column {width="35%"}

```{r}
#| content: valuebox
#| title: "TOP EXERCISE"

list(
  color = "danger",
  value = top_exercise
)
```

### Column {width="25%"}

```{r}
#| content: valuebox
#| title: "LONGEST STREAK"

list(
  color = "primary",
  value = longest_streak
)
```

## Row {height="40%"}

### Column {width="25%"}

```{r}
#| title: Summary

workout_sheet |>
  filter(muscle_group != "Running") |>
  mutate(main_muscle_group = case_match(
  muscle_group,
  c("Back") ~ "Back",
  c("Biceps", "Triceps", "Forearms", "Shoulders", "Trapezius") ~ "Arms & Shoulders",
  c("Quadriceps", "Hamstrings", "Glutes", "Calves") ~ "Legs",
  "Chest" ~ "Chest",
  "Abdominals" ~ "Abdominals"
  )) |>
  group_by(main_muscle_group) |>
  summarise(total_volume = sum(rep*weight_lb), .groups = "drop") |>
  mutate(percent = total_volume / sum(total_volume)) |>
  select(-total_volume) |>
  gt() |>
  fmt_percent(
    columns = percent,
    decimals = 1
  ) |>
  tab_style(
    style = cell_text(color = "#ae8b2d", weight = "bold"),
    locations = cells_body(
      columns = everything(),
      rows = percent >= .4
    )
  ) |>
    tab_style(
    style = cell_text(color = "#0e2635", weight = "bold"),
    locations = cells_body(
      columns = everything(),
      rows = percent <= .1
    )
  ) |>
  cols_label(
    main_muscle_group = "",
    percent = "Proportion",
    .fn = md
  )
```

### Column {width="25%"}

```{r}
#| title: Push

muscle_type_stat(push)
```

### Column {width="25%"}

```{r}
#| title: Pull

muscle_type_stat(pull)
```

### Column {width="25%"}

```{r}
#| title: Legs

muscle_type_stat(legs)
```

## Row {height="40%"}

```{r}
#| title: Body composition

body_comp_data <- tibble(
  month = LETTERS[1:12],
  Lean = runif(12, min = 0.6, max = 1.0),
  Fat = 1-Lean
)

body_comp_data |>
  pivot_longer(-month, names_to = "type", values_to = "percentage") |>
  ggplot(aes(month, y = percentage, fill = type)) +
  geom_col(color = "white") +
  scale_fill_manual(values = c("#ae8b2d", "#0e2635")) +
  scale_y_continuous(labels = label_percent(),
                     limits = c(0, NA),
                     expand = expansion(mult = c(0, 0.1))) +
  labs(x = NULL, y = NULL, fill = NULL) +
  theme_minimal(base_size = 20) +
  theme(legend.position = "top")
```

```{r}
#| title: Total workout volume

total_workout_volume <- tibble(
  month = LETTERS[1:12],
  volume = runif(12, min = 100000, max = 200000)
)

total_workout_volume |>
  mutate(highest = volume == max(volume)) |>
  ggplot(aes(month, volume / 1000, fill = highest)) +
  geom_col() +
  scale_fill_manual(values = c("#ae8b2d", "#0e2635"), guide = "none") +  # Default & highlight color
  labs(x = NULL, y = "Total volume (lbs)") +
  scale_y_continuous(labels = scales::label_number(suffix = " K"),
                     limits = c(0, NA),
                     expand = expansion(mult = c(0, 0.1))) +
  theme_minimal(base_size = 20)
```

```{r}
#| label: volume-strength-plot
process_muscle_data <- function(group_name, metric, timeframe = "weekly") {
  muscle_data <- workout_sheet |>
    filter(muscle_group %in% group_name) |>
    mutate(value = if (metric == "volume") weight_lb * rep else weight_lb * (1 + (rep / 30))) |>
    arrange(date) |>
    mutate(
      period_start = if (timeframe == "weekly") floor_date(as.Date(date), "week", week_start = 7) else floor_date(as.Date(date), "month"),
      period_label = if (timeframe == "weekly") paste(format(period_start, "%b %d"), "-", format(period_start + 6, "%b %d")) else format(period_start, "%b %Y")
    ) |>
    group_by(period_label, period_start) |>
    summarise(agg_value = if (metric == "volume") sum(value) else mean(value, na.rm = TRUE), .groups = "drop") |>
    mutate(highest = agg_value == max(agg_value)) |>
    arrange(period_start) |>  # Ensure chronological order before slicing
    slice_tail(n = 10) |>  
    mutate(period_label = factor(period_label, levels = unique(period_label), ordered = TRUE))  # Ensure correct plotting order

  return(muscle_data)
}

create_plot <- function(group_name, metric, timeframe = "weekly") {
  muscle_data <- process_muscle_data(group_name, metric, timeframe)
  
  if (nrow(muscle_data) == 0) {
    return(ggplot() +
             annotate("text", x = 1, y = 1, label = "No data yet", size = 10, hjust = 0.5, vjust = 0.5) +
             theme_void())
  }

  ggplot(muscle_data, aes(x = period_label, y = if (metric == "volume") agg_value / 1000 else agg_value, group = 1, fill = highest)) +
    geom_col() +
    scale_y_continuous(
      labels = if (metric == "volume") scales::label_number(suffix = " K") else scales::label_number(),
      limits = c(0, NA),
      expand = expansion(mult = c(0, 0.1))
    ) +
    labs(x = NULL, y = if (metric == "volume") "Total volume (lbs)" else "Mean 1RM (lbs)") +
    scale_fill_manual(values = c("FALSE" = "#ae8b2d", "TRUE" = "#0e2635"), guide = "none") +
    theme_minimal(base_size = 40) +
    theme(axis.text.x = element_text(size = 30))
}
```

# PUSH

## Row

### Column {.tabset}
```{r}
#| title: Chest - Volume (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Chest", "volume")
```

```{r}
#| title: Chest - Volume (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Chest", "volume", "monthly")
```

### Column {.tabset}
```{r}
#| title: Chest - Strength (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Chest", "1RM")
```

```{r}
#| title: Chest - Strength (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Chest", "1RM", "monthly")
```

## Row

### Column {.tabset}
```{r}
#| title: Triceps - Volume (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Triceps", "volume")
```

```{r}
#| title: Triceps - Volume (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Triceps", "volume", "monthly")
```

### Column {.tabset}
```{r}
#| title: Triceps - Strength (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Triceps", "1RM")
```

```{r}
#| title: Triceps - Strength (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Triceps", "1RM", "monthly")
```

## Row

### Column {.tabset}
```{r}
#| title: Shoulders - Volume (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Shoulders", "volume")
```

```{r}
#| title: Shoulders - Volume (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Shoulders", "volume", "monthly")
```

### Column {.tabset}
```{r}
#| title: Shoulders - Strength (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Shoulders", "1RM")
```

```{r}
#| title: Shoulders - Strength (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Shoulders", "1RM", "monthly")
```

# PULL

## Row

### Column {.tabset}
```{r}
#| title: Biceps - Volume (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Biceps", "volume")
```

```{r}
#| title: Biceps - Volume (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Biceps", "volume", "monthly")
```

### Column {.tabset}
```{r}
#| title: Biceps - Strength (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Biceps", "1RM")
```

```{r}
#| title: Biceps - Strength (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Biceps", "1RM", "monthly")
```

## Row

### Column {.tabset}
```{r}
#| title: Back - Volume (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Back", "volume")
```

```{r}
#| title: Back - Volume (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Back", "volume", "monthly")
```

### Column {.tabset}
```{r}
#| title: Back - Strength (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Back", "1RM")
```

```{r}
#| title: Back - Strength (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Back", "1RM", "monthly")
```

## Row

### Column {.tabset}
```{r}
#| title: Trapezius - Volume (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Trapezius", "volume")
```

```{r}
#| title: Trapezius - Volume (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Trapezius", "volume", "monthly")
```

### Column {.tabset}
```{r}
#| title: Trapezius - Strength (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Trapezius", "1RM")
```

```{r}
#| title: Trapezius - Strength (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Trapezius", "1RM", "monthly")
```

# LEGS

## Row

### Column {.tabset}
```{r}
#| title: Hamstrings - Volume (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Hamstrings", "volume")
```

```{r}
#| title: Hamstrings - Volume (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Hamstrings", "volume", "monthly")
```

### Column {.tabset}
```{r}
#| title: Hamstrings - Strength (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Hamstrings", "1RM")
```

```{r}
#| title: Hamstrings - Strength (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Hamstrings", "1RM", "monthly")
```

## Row

### Column {.tabset}
```{r}
#| title: Quadriceps - Volume (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Quadriceps", "volume")
```

```{r}
#| title: Quadriceps - Volume (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Quadriceps", "volume", "monthly")
```

### Column {.tabset}
```{r}
#| title: Quadriceps - Strength (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Quadriceps", "1RM")
```

```{r}
#| title: Quadriceps - Strength (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Quadriceps", "1RM", "monthly")
```

## Row

### Column {.tabset}
```{r}
#| title: Calves - Volume (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Calves", "volume")
```

```{r}
#| title: Calves - Volume (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Calves", "volume", "monthly")
```

### Column {.tabset}
```{r}
#| title: Calves - Strength (Weekly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Calves", "1RM")
```

```{r}
#| title: Calves - Strength (Monthly)
#| fig-width: 25
#| fig-asp: 0.25
create_plot("Calves", "1RM", "monthly")
```

# ABS & GLUTES

## Row

### Column {.tabset}
```{r}
#| title: Abdominals - Volume (Weekly)
#| fig-asp: 0.3
create_plot("Abdominals", "volume")
```

```{r}
#| title: Abdominals - Volume (Monthly)
#| fig-asp: 0.3
create_plot("Abdominals", "volume", "monthly")
```

### Column {.tabset}
```{r}
#| title: Abdominals - Strength (Weekly)
#| fig-asp: 0.3
create_plot("Abdominals", "1RM")
```

```{r}
#| title: Abdominals - Strength (Monthly)
#| fig-asp: 0.3
create_plot("Abdominals", "1RM", "monthly")
```

## Row

### Column {.tabset}
```{r}
#| title: Glutes - Volume (Weekly)
#| fig-asp: 0.3
create_plot("Glutes", "volume")
```

```{r}
#| title: Glutes - Volume (Monthly)
#| fig-asp: 0.3
create_plot("Glutes", "volume", "monthly")
```

### Column {.tabset}
```{r}
#| title: Glutes - Strength (Weekly)
#| fig-asp: 0.3
create_plot("Glutes", "1RM")
```

```{r}
#| title: Glutes - Strength (Monthly)
#| fig-asp: 0.3
create_plot("Glutes", "1RM", "monthly")
```
